import java.util.ArrayList;

/**
 *
 * @author MarcTheMarcian
 */
public class DFA {    
  private final int[][] functionDeclarationDFA;  
  private final int[][] forLoopDFA;
  private final ArrayList<Integer> funcDecDFAfinalStates = new ArrayList();;
  private final ArrayList<Integer> forLoopDFAfinalStates = new ArrayList();;
  
  public DFA() {
    functionDeclarationDFA = new int[][] {
      {1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
      {12, 1, 2, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
      {12, 12, 12, 3, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
      {4, 12, 12, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
      {12, 8, 5, 12, 6, 7, 9, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
      {12, 12, 12, 12, 6, 7, 9, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
      {4, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
      {12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
      {12, 8, 5, 12, 6, 7, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
      {12, 12, 12, 12, 12, 12, 12, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
      {12, 12, 12, 12, 6, 7, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
      {12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
      {12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12}
    };
    
//    forLoopDFA =  new int[][] {
//      {30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 1, 30, 30, 30, 30, 30, 30, 30, 30},
//      {30, 30, 30, 2, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30},
//      {30, 30, 7, 30, 30, 30, 30, 30, 3, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30},
//      {30, 30, 12, 30, 30, 30, 30, 30, 4, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30},
//      {30, 30, 18, 30, 30, 5, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30},
//      {30, 30, 30, 30, 30, 30, 30, 30, 6, 30, 30, 30, 30, 30, 30, 30, 30, 23, 30},
//      {30, 30, 30, 30, 30, 30, 30, 30, 6, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30},
//      {30, 30, 30, 30, 8, 30, 30, 30, 3, 30, 30, 9, 30, 30, 30, 11, 30, 30, 30},
//      {30, 30, 7, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30},
//      {30, 30, 10, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 10, 30, 30},
//      {30, 30, 30, 30, 8, 30, 30, 30, 3, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30},
//      {30, 30, 30, 30, 8, 30, 30, 30, 3, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30},
//      {30, 30, 30, 30, 30, 30, 30, 30, 4, 30, 30, 30, 30, 14, 13, 30, 30, 30, 30},
//      {30, 30, 12, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30},
//      {30, 30, 15, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 15, 30, 30},
//      {30, 30, 30, 30, 30, 30, 30, 30, 4, 30, 30, 30, 16, 30, 13, 30, 30, 30, 30},
//      {30, 30, 17, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 17, 30, 30},
//      {30, 30, 30, 30, 30, 30, 30, 30, 4, 30, 30, 30, 30, 30, 13, 30, 30, 30, 30},
//      {30, 30, 30, 30, 30, 5, 30, 30, 30, 30, 30, 21, 30, 30, 30, 19, 30, 30, 30},
//      {30, 30, 30, 30, 20, 5, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30},
//      {30, 30, 18, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30},
//      {30, 30, 22, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 22, 30, 30},
//      {30, 30, 30, 30, 20, 5, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30},
//      {30, 30, 25, 30, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 24},
//      {30, 30, 30, 30, 30, 30, 30, 30, 6, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30},
//      {30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 26, 30, 30, 30, 29, 30, 30, 30},
//      {30, 30, 27, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 27, 30, 30},
//      {30, 30, 30, 30, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30},
//      {30, 30, 25, 30, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 24},
//      {30, 30, 30, 30, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30},
//      {30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30}
//    };  
    
    forLoopDFA = new int[][] {
      {48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 1, 48, 48, 48, 48, 48, 48, 48, 48},
      {48, 48, 48, 2, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48},
      {48, 48, 8, 48, 48, 48, 48, 48, 3, 48, 48, 48, 48, 48, 48, 7, 15, 48, 48},
      {48, 48, 18, 48, 48, 48, 48, 48, 4, 48, 48, 48, 48, 48, 48, 17, 25, 48, 48},
      {48, 48, 28, 48, 48, 5, 48, 48, 48, 48, 48, 48, 48, 48, 48, 27, 35, 48, 48},
      {48, 48, 48, 48, 48, 48, 48, 48, 6, 48, 48, 48, 48, 48, 48, 48, 48, 37, 48},
      {48, 48, 48, 48, 48, 48, 48, 48, 6, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48},
      {48, 48, 11, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48},
      {48, 14, 7, 48, 10, 48, 48, 48, 3, 48, 48, 12, 14, 16, 16, 9, 48, 48, 48},
      {48, 48, 48, 48, 10, 48, 48, 48, 3, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48},
      {48, 48, 8, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 7, 15, 48, 48},
      {48, 48, 48, 48, 10, 48, 48, 48, 3, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48},
      {48, 48, 13, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 13, 48, 48},
      {48, 14, 48, 48, 10, 48, 48, 48, 3, 48, 48, 48, 14, 16, 16, 48, 48, 48, 48},
      {48, 48, 13, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 13, 48, 48},
      {48, 14, 48, 48, 10, 48, 48, 48, 3, 48, 48, 48, 14, 16, 16, 48, 48, 48, 48},
      {48, 48, 13, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 13, 48, 48},
      {48, 48, 21, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48},
      {48, 24, 17, 48, 20, 48, 48, 48, 4, 48, 48, 22, 24, 26, 26, 19, 48, 48, 48},
      {48, 48, 48, 48, 20, 48, 48, 48, 4, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48},
      {48, 48, 18, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 17, 25, 48, 48},
      {48, 48, 48, 48, 20, 48, 48, 48, 4, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48},
      {48, 48, 23, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 23, 48, 48},
      {48, 24, 48, 48, 20, 48, 48, 48, 4, 48, 48, 48, 24, 26, 26, 48, 48, 48, 48},
      {48, 48, 23, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 23, 48, 48},
      {48, 24, 48, 48, 20, 48, 48, 48, 4, 48, 48, 48, 24, 26, 26, 48, 48, 48, 48},
      {48, 48, 23, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 23, 48, 48},
      {48, 48, 31, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48},
      {48, 34, 27, 48, 30, 5, 48, 48, 48, 48, 48, 32, 34, 36, 36, 29, 48, 48, 48},
      {48, 48, 48, 48, 30, 5, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48},
      {48, 48, 28, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 27, 35, 48, 48},
      {48, 48, 48, 48, 30, 5, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48},
      {48, 48, 33, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 33, 48, 48},
      {48, 34, 48, 48, 30, 5, 48, 48, 48, 48, 48, 48, 34, 36, 36, 48, 48, 48, 48},
      {48, 48, 33, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 33, 48, 48},
      {48, 34, 48, 48, 30, 5, 48, 48, 48, 48, 48, 48, 34, 36, 36, 48, 48, 48, 48},
      {48, 48, 33, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 33, 48, 48},
      {49, 48, 39, 48, 48, 48, 48, 48, 42, 48, 48, 48, 48, 48, 48, 52, 41, 48, 38},
      {48, 48, 48, 48, 48, 48, 48, 48, 6, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48},
      {48, 46, 48, 48, 48, 48, 48, 48, 42, 48, 48, 40, 46, 46, 46, 51, 48, 48, 48},
      {48, 48, 47, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 43, 41, 48, 48},
      {48, 46, 48, 48, 48, 48, 48, 48, 42, 48, 48, 48, 46, 46, 46, 48, 48, 48, 48},
      {49, 48, 39, 48, 48, 48, 48, 48, 42, 48, 48, 48, 48, 48, 48, 48, 41, 48, 38},
      {48, 48, 44, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48},
      {48, 46, 48, 48, 48, 48, 48, 48, 42, 48, 48, 48, 46, 46, 46, 48, 48, 48, 48},
      {48, 46, 48, 48, 48, 48, 48, 48, 42, 48, 48, 48, 46, 46, 46, 48, 48, 48, 48},
      {48, 48, 47, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 43, 41, 48, 48},
      {48, 48, 48, 48, 48, 48, 48, 48, 42, 48, 48, 48, 46, 46, 46, 45, 48, 48, 48},
      {48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48},
      {48, 48, 50, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48},
      {48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 40, 48, 48, 48, 48, 48, 48, 48},
      {48, 46, 48, 48, 48, 48, 48, 48, 42, 48, 48, 48, 46, 46, 46, 48, 48, 48, 48},
      {48, 48, 53, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48},
      {48, 46, 48, 48, 48, 48, 48, 48, 42, 48, 48, 48, 46, 46, 46, 48, 48, 48, 48}
    };
    
    funcDecDFAfinalStates.add(11);
//    forLoopDFAfinalStates.add(6);
//    forLoopDFAfinalStates.add(24);    
    forLoopDFAfinalStates.add(6);
    forLoopDFAfinalStates.add(38);    
  }
  
  public int[][] getFunctionDeclarationDFA() {
    return functionDeclarationDFA;
  }
  
  public int[][] getForLoopDFA() {
    return forLoopDFA;
  }
  
  public ArrayList getFuncDecDFAfinalStates() {
    return funcDecDFAfinalStates;
  }
  
  public ArrayList getForLoopDFAfinalStates() {
    return forLoopDFAfinalStates;
  }
}
